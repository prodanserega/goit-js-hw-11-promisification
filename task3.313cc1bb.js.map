{"version":3,"sources":["js/task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","id","delay","Promise","resolve","reject","setTimeout","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC7BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkB,EAAGC,GAAAA,MACnBC,MAAAA,EAAQR,EAA0B,IAAK,KAEtC,OAAA,IAAIS,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACUT,KAAKE,SAAW,IAEjCK,EAAQ,CAAEH,GAAAA,EAAIM,KAAML,IAEtBG,EAAOJ,IACNC,MAIDM,EAAa,CAACP,EAAIM,KACtBE,QAAQC,mBAAmBT,kBAAmBM,QAG1CI,EAAWV,IACfQ,QAAQG,qCAAqCX,+BAa/CD,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task3.313cc1bb.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  \n  const makeTransaction = ({ id }) => {\n    const delay = randomIntegerFromInterval(200, 500);\n  \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const canProcess = Math.random() > 0.3;\n        if (canProcess) {\n          resolve({ id, time: delay });\n        }\n        reject(id);\n      }, delay);\n    });\n  };\n  \n  const logSuccess = (id, time) => {\n    console.log(`Transaction ${id} processed in ${time}ms`);\n  };\n  \n  const logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n  };\n  \n  /*\n   * Работает так\n   */\n // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n  //makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n  //makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n  /*\n   * Должно работать так\n   */\n  makeTransaction({ id: 70, amount: 150 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n  \n  makeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);"]}